// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"fes"
	"sync"
)

// Ensure, that FareEstimateWriterMock does implement fes.FareEstimateWriter.
// If this is not the case, regenerate this file with moq.
var _ fes.FareEstimateWriter = &FareEstimateWriterMock{}

// FareEstimateWriterMock is a mock implementation of fes.FareEstimateWriter.
//
// 	func TestSomethingThatUsesFareEstimateWriter(t *testing.T) {
//
// 		// make and configure a mocked fes.FareEstimateWriter
// 		mockedFareEstimateWriter := &FareEstimateWriterMock{
// 			WriteFareEstimateFunc: func(id int, estimate float64) error {
// 				panic("mock out the WriteFareEstimate method")
// 			},
// 		}
//
// 		// use mockedFareEstimateWriter in code that requires fes.FareEstimateWriter
// 		// and then make assertions.
//
// 	}
type FareEstimateWriterMock struct {
	// WriteFareEstimateFunc mocks the WriteFareEstimate method.
	WriteFareEstimateFunc func(id int, estimate float64) error

	// calls tracks calls to the methods.
	calls struct {
		// WriteFareEstimate holds details about calls to the WriteFareEstimate method.
		WriteFareEstimate []struct {
			// ID is the id argument value.
			ID int
			// Estimate is the estimate argument value.
			Estimate float64
		}
	}
	lockWriteFareEstimate sync.RWMutex
}

// WriteFareEstimate calls WriteFareEstimateFunc.
func (mock *FareEstimateWriterMock) WriteFareEstimate(id int, estimate float64) error {
	if mock.WriteFareEstimateFunc == nil {
		panic("FareEstimateWriterMock.WriteFareEstimateFunc: method is nil but FareEstimateWriter.WriteFareEstimate was just called")
	}
	callInfo := struct {
		ID       int
		Estimate float64
	}{
		ID:       id,
		Estimate: estimate,
	}
	mock.lockWriteFareEstimate.Lock()
	mock.calls.WriteFareEstimate = append(mock.calls.WriteFareEstimate, callInfo)
	mock.lockWriteFareEstimate.Unlock()
	return mock.WriteFareEstimateFunc(id, estimate)
}

// WriteFareEstimateCalls gets all the calls that were made to WriteFareEstimate.
// Check the length with:
//     len(mockedFareEstimateWriter.WriteFareEstimateCalls())
func (mock *FareEstimateWriterMock) WriteFareEstimateCalls() []struct {
	ID       int
	Estimate float64
} {
	var calls []struct {
		ID       int
		Estimate float64
	}
	mock.lockWriteFareEstimate.RLock()
	calls = mock.calls.WriteFareEstimate
	mock.lockWriteFareEstimate.RUnlock()
	return calls
}
